import{_ as t,c as n,a3 as e,o as i}from"./chunks/framework.DtMx7FFi.js";const o="/assets/xarm_python_sdk_download.i2HIC3Jg.png",u=JSON.parse('{"title":"Installation","description":"","frontmatter":{"title":"Installation","order":1},"headers":[],"relativePath":"xarm_python_sdk/installation.md","filePath":"en/xarm_python_sdk/installation.md","lastUpdated":null}'),l={name:"xarm_python_sdk/installation.md"};function s(r,a,d,p,h,c){return i(),n("div",null,a[0]||(a[0]=[e('<h2 id="_1-introduction" tabindex="-1">1. Introduction <a class="header-anchor" href="#_1-introduction" aria-label="Permalink to &quot;1. Introduction&quot;">​</a></h2><p>This tutorial is written using the UFACTORY xArm 6 robotic arm, Windows system, and Python version 3.12.6 The xArm-Python-SDK is used for controlling UFACTORY robotic arms, such as xArm, Lite6, and 850.<br> Note: The xArm-Python-SDK only supports Python 3, and Python 3.10 or above is recommended.</p><h2 id="_2-prerequisites" tabindex="-1">2. Prerequisites <a class="header-anchor" href="#_2-prerequisites" aria-label="Permalink to &quot;2. Prerequisites&quot;">​</a></h2><p>Before reading this tutorial, make sure you have:</p><ul><li>Familiarity with operating UFACTORY robotic arms.</li><li>Understanding of Python 3 syntax and experience in Python programming.</li><li>Knowledge of managing Python virtual environments.</li></ul><h2 id="_3-installation" tabindex="-1">3. Installation <a class="header-anchor" href="#_3-installation" aria-label="Permalink to &quot;3. Installation&quot;">​</a></h2><h3 id="_3-1-install-via-pip-recommended" tabindex="-1">3.1 Install via pip [Recommended] <a class="header-anchor" href="#_3-1-install-via-pip-recommended" aria-label="Permalink to &quot;3.1 Install via pip [Recommended]&quot;">​</a></h3><p>In a Python virtual environment, use pip to install the xarm-python-sdk with the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pip install xarm-python-sdk</span></span></code></pre></div><h3 id="_3-2-install-from-github-download" tabindex="-1">3.2 Install from Github Download <a class="header-anchor" href="#_3-2-install-from-github-download" aria-label="Permalink to &quot;3.2 Install from Github Download&quot;">​</a></h3><h4 id="download" tabindex="-1">Download <a class="header-anchor" href="#download" aria-label="Permalink to &quot;Download&quot;">​</a></h4><ul><li><p>Download using a browser<br> GitHub link for xArm-Python-SDK:<br><a href="https://github.com/xArm-Developer/xArm-Python-SDK" target="_blank" rel="noreferrer">https://github.com/xArm-Developer/xArm-Python-SDK</a></p><p>Download the xArm-Python-SDK<br><img src="'+o+'" alt=""></p></li><li><p>Download using Git command</p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone https://github.com/xArm-Developer/xArm-Python-SDK.git</span></span></code></pre></div><h4 id="install-via-command" tabindex="-1">Install via Command <a class="header-anchor" href="#install-via-command" aria-label="Permalink to &quot;Install via Command&quot;">​</a></h4><p>After extracting, navigate to the \\xArm-Python-SDK-master folder, and use the following command to install.</p><ul><li>Windows</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python setup.py install</span></span></code></pre></div><ul><li>Ubuntu Linux</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python3 setup.py install</span></span></code></pre></div>',19)]))}const b=t(l,[["render",s]]);export{u as __pageData,b as default};
